[세팅방식]
앤서블 2.9.12
아파치 카프카 2.6
아파치 주키퍼 3.5.9
자바 1.8
----------------------------------------------------------------------------------------------------------------------------------------
step
1. 주키퍼 실행
2. kafka 실행
3. topic 생성
4. 소스 실행

----------------------------------------------------------------------------------------------------------------------------------------
[Setting]

[Kafka]
Broker: 3개
세팅 후: LAG 확인 (카프카에 남아 있는 메세지 수) - 컨슈머가 가져간 메세지 수


[Topic]
replication-factor: 3개 (kafka 클러스터 설치 완료후 토픽을 생성하였을 때// --partition 1, --replication-factor 3)
partition: 파티션 수 만큼 컨슈머를 연결 가능// 우선 2개(토픽을 생성할 때 옵션)


[Provider ***]
retries(재시도전략): 2147483647(timeout 시간내)
delivery.timeout.ms: 2분
request.timeout.ms: 30sec
Compression 여부는? Producer Record 데이터에 대한 압축 전략 ( gzip, snappy, lz4, ztsd )
acks: default all(모든 Partition 에게 기록되었는지 확인을 통보받음)


[Consumer ***]
fetch.min.bytes의 기본설정: 1byte 
max.partition.fetch.bytes 의 기본 설정: 1.048MB
max.poll.records 의 설정한 값만큼 record 를 가져오게 됩니다. ( default는 500개 )
session.timeout.ms: default 10초
heartbeat : 일반적으로 session.timeout.ms 의 1/3 로 활용한다 default 3초
max.poll.interval.ms: default 5분


[전송관련]
1.exactly once
- Producer 의 설정을 acks = all 로 설정합니다.
- enable.idempotence = true 로 설정합니다.
- idempotence 설정은 Broker 에게 ProducerID(PID) 를 전송하여 중복체크를 할 수 있게 전송하게 됩니다.

2.At least once
- Producer 의 설정을 acks = all 로 설정합니다.
acks = all 설정은 Leader 가 Follower 들에게 토픽을 잘 전송하였는지 체크하는 option 입니다.

----------------------------------------------------------------------------------------------------------------------------------------

리눅스 설치시 java설치 + kafka설치
java -version

프로퍼티 세팅

----------------------------------------------------------------------------------------------------------------------------------------

디렉토리 config로 이동 ( ex) C:\dev\kafka_2.11-1.1.0\config) ->
server.properties 파일 텍스트 편집기로 오픈 ->
log.dirs=/tmp/kafka-logs 를 카프카 설치 경로로 변경 ->
 ( ex ) log.dirs=C:\\dev\\kafka_2.11-1.1.0\\logs)

----------------------------------------------------------------------------------------------------------------------------------------
path: bin/windows

kafka-server-start
kafka-server-stop

zookeeper-server-start
zookeeper-server-stop

----------------------------------------------------------------------------------------------------------------------------------------
path: config 

zookeeper와 kafka의 properties config파일
- server
- zookeeper


----------------------------------------------------------------------------------------------------------------------------------------
1) zookeeper 실행하기
# zookeeper 실행 명령어
bin\windows\zookeeper-server-start.bat config\zookeeper.properties

2) kafka 서버 실행
bin\windows\kafka-server-start.bat config\server.properties

----------------------------------------------------------------------------------------------------------------------------------------

netstat -na | findstr "2181"

1) zookeeper
 TCP    0.0.0.0:2181           DESKTOP-DSOFM80:0      LISTENING

2) kafka default port
TCP    0.0.0.0:9092           DESKTOP-DSOFM80:0      LISTENING

----------------------------------------------------------------------------------------------------------------------------------------

[Kafka Test]

1. topic 생성(broker)
.\bin\windows\kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 3 --topic seatCreated
(구버전에서 사용)bin\windows\kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test20190715

2. 생성한 topic에 message 보내기 (producer)
////.\kafka-console-producer.bat  --broker-list  localhost:9092 --topic oingdaddy
bin\windows\kafka-console-producer.bat --broker-list localhost:9092 --topic test20190715 --from-beginning
bin\windows\kafka-console-producer.bat --bootstrap-server localhost:9092 --topic test20190715 

3. topic에 있는 message 가져오기 (consumer)
bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic test20190715

----------------------------------------------------------------------------------------------------------------------------------------

카프카 토픽 리스트 조회
.\bin\windows\kafka-topics.bat --bootstrap-server localhost:9092 --list

(구버전)
bin\windows\kafka-topics.bat --list --zookeeper localhost:2181



----------------------------------------------------------------------------------------------------------------------------------------
리스트 조회 상세

.\bin\windows\kafka-topics.bat --describe --topic quickstart-events --bootstrap-server localhost:9092

----------------------------------------------------------------------------------------------------------------------------------------
실행중인 내역 port 확인
#zookeeper 정상 실행 여부 확인
netstat -na | findstr "2181"

#kafka 정상 실행 여부 확인
netstat -na | findstr "9092"


----------------------------------------------------------------------------------------------------------------------------------------
[Quick Start step1]

Zookeeper와 Kafka 서버를 실행했으니, Topic을 만들어서 메시지를 생산/소비하는 예제를 진행해보겠습니다.
윈도우 : .bat 파일
리눅스 환경 : .sh 파일

1) Topic
⭐ Topic 관련 옵션 한번에 보기 (help 명령어)

# .\bin\windows\kafka-topics.bat --help

----------------------------------------------------------------------------------------------------------------------------------------
[Quick Start step2]

Topic 생성하기
CMD창을 하나 더 열어서 Topic을 만듭니다.

# .\bin\windows\kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic test

--create
: 새로운 토픽을 만들 때 사용하는 옵션

--bootstrap-server
: 연결할 Kafka 서버( host:port ) 이 옵션이 추가되면, 직접 Zookeeper에 연결하지 않아도 됩니다.

--replication-factor
: Partition 복제 수, 이 옵션을 사용하지 않으면, 기본 값을 사용합니다. 
기본 값은 server.properties 파일에서 default.replication.factor 항목으로 설정 가능합니다. ( 설정되어 있지 않을 경우, 추가 작성 )

--partitions
: Topic이 생성되거나 변경될 때의 Partition 수, 이 옵션을 사용하지 않으면, 기본 값을 사용합니다.
기본 값은 server.properties 파일에서 num.partitions 항목으로 설정 가능합니다.

--topic
create, alter, describe, delete 옵션에 사용할 Topic 명
Topic 이름은 큰따옴표(")로 묶고, 정규식 사용이 가능하므로 \로 escape 합니다.

----------------------------------------------------------------------------------------------------------------------------------------
[Quick Start step3]

Topic 목록
# .\bin\windows\kafka-topics.bat --list --bootstrap-server localhost:9092

--list
사용 가능한 Topic 목록

----------------------------------------------------------------------------------------------------------------------------------------
[Quick Start step4]

Topic 상세정보
# .\bin\windows\kafka-topics.bat --describe --topic test --bootstrap-server localhost:9092
Topic: test     PartitionCount: 1       ReplicationFactor: 1    Configs: segment.bytes=1073741824
        Topic: test     Partition: 0    Leader: 0       Replicas: 0     Isr: 0

--describe
운영상에 필요한 Topic의 상세정보를 보여줍니다.


----------------------------------------------------------------------------------------------------------------------------------------
[Quick Start step5]

Topic 삭제

# .\bin\windows\kafka-topics.bat --delete --topic test --bootstrap-server localhost:9092

--delete
Topic을 삭제하기 위해서는 server.properties 파일에서 delete.topic.enable=true 설정을 추가해줘야 합니다. ( 서버 재시작 필요 )

----------------------------------------------------------------------------------------------------------------------------------------
[error]
error: kafka.common.InconsistentClusterIdException: The Cluster ID doesn't match stored clusterId Some in meta.properties. The broker is trying to join the wrong cluster. Configured zookeeper.connect may be wrong.)

카프카 설정파일(카프카 설치 디렉토리/config/server.properties)의 log.dirs 항목에서 설정되어 있는 카프카 로그 path로 가보면 meta.properties라는 파일이 있는데 
해당 파일을 지워주고 카프카를 재시작해주면 해결된다.


[2020-03-12 21:24:45,131] ERROR Shutdown broker because all log dirs in c:\tmp\kafka-logs have failed (kafka.log.LogManager)
=> 위와 같은 에러가 발생한다면, c:\tmp 폴더 하위에 있는 kafka-logs 폴더와 zookeeper 폴더를 제거하시길 바랍니다. 서버 실행시 재생성되므로 상관 없습니다. ( 참고 )


